name: Deploy Docs to GitHub Pages

on:
  push:
    branches:
      - main # Or your default branch, e.g., 'master'

permissions:
  contents: write # To allow GitHub Actions to commit the built docs to gh-pages branch
  pages: write # To allow the deploy-pages action to deploy to GitHub Pages
  id-token: write # For OIDC authentication for pages

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use the latest stable Python 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocstrings mkdocstrings-python pymdown-extensions

      - name: Build MkDocs site
        run: mkdocs build

      # --- NEW DIAGNOSTIC STEP: Check generated site content ---
      - name: List built site content and check HTML
        run: |
          echo "--- Listing contents of the 'site' directory ---"
          ls -R ./site
          echo ""
          echo "--- Content of ./site/language-reference/builtins/index.html (first 20 lines) ---"
          # '|| true' prevents the step from failing if the file doesn't exist for some reason
          head -n 20 ./site/language-reference/builtins/index.html || echo "File not found or empty."
          echo ""
          echo "--- Content of ./site/language-reference/overview/index.html (first 20 lines) ---"
          head -n 20 ./site/language-reference/overview/index.html || echo "File not found or empty."

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './site' # The directory where mkdocs build puts the output

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
